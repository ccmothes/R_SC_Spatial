{"frames":[{"func":"rmarkdown::render(input = paste0(baseDir, \"/src/section3/countySummaries.Rmd\"), \n    output_file = paste0(baseDir, \"/outputs/summary_test_2\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_file(text, output)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(if (tangle) process_tangle(group) else process_group(group), \n    error = function(e) {\n        setwd(wd)\n        cat(res, sep = \"\\n\", file = output %n% \"\") ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_group(group)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_group.block(group)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"call_block(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"block_exec(params)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"in_dir(input_dir(), evaluate(code, envir = env, new_device = FALSE, \n    keep_warning = !isFALSE(options$warning), keep_message = !isFALSE(options$message), \n    stop_on_error = if (options$error && options$include) 0L else 2L, \n    output_handler = knit_handlers(options$render, options)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"evaluate(code, envir = env, new_device = FALSE, keep_warning = !isFALSE(options$warning), \n    keep_message = !isFALSE(options$message), stop_on_error = if (options$error && \n        options$include) 0L else 2L, output_handler = knit_handlers(options$render, \n        options))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"evaluate::evaluate(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"evaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos, \n    debug = debug, last = i == length(out), use_try = stop_on_error != \n        2L, keep_warning = keep_warning, keep_message = keep_message, \n    output_handler = output_handler, include_timing = include_timing)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"timing_fn(handle(ev <- withCallingHandlers(withVisible(eval(expr, \n    envir, enclos)), warning = wHandler, error = eHandler, message = mHandler)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"handle(ev <- withCallingHandlers(withVisible(eval(expr, envir, \n    enclos)), warning = wHandler, error = eHandler, message = mHandler))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(withVisible(eval(expr, envir, enclos)), warning = wHandler, \n    error = eHandler, message = mHandler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withVisible(eval(expr, envir, enclos))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, envir, enclos)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, envir, enclos)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"raster::raster(images[grepl(pattern = m, x = images)])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"raster::raster(images[grepl(pattern = m, x = images)])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".local(x, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".rasterObjectFromFile(x, band = band, objecttype = \"RasterLayer\", \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in if (x == \"\" | x == \".\") { : argument is of length zero\n"}